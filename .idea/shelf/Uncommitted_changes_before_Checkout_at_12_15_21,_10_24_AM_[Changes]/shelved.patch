Index: helper.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\nclass ModHelloWorldHelper\n{\n    //Function for adding new user's email\n    public static function subscribe()\n    {\n        $flag = 0;\n        $application = JFactory::getApplication();\n        $name = $_POST[\"name\"];\n        $email = $_POST[\"email\"];\n        $db = JFactory::getDbo();\n        $query = $db->getQuery(true);\n\n        $query\n            ->select($db->quoteName(array('id', 'name', 'email')))\n            ->from($db->quoteName('newsletter'));\n\n        $db->setQuery($query);\n        $result = $db->loadObjectList();\n\n        //Checking if user email address is already added\n        foreach ($result as $key => $value) {\n            if ($value->email === $email) {\n                $application->enqueueMessage(JText::_('Email Already Exists'), 'error');\n                $flag = 1;\n                break;\n            }\n        }\n\n        //If user email is new then email address will be added\n        if ($flag == 0) {\n            $columns = array('name', 'email');\n            $values = array($db->quote($name), $db->quote($email));\n            $query->clear();\n\n            $query\n                ->insert($db->quoteName('newsletter'))\n                ->columns($db->quoteName($columns))\n                ->values(implode(',', $values));\n\n            $db->setQuery($query);\n            $db->execute();\n            $application->enqueueMessage(JText::_('Subscribed successfully'), 'success');\n        }\n    }\n\n    public static function unSubscribe()\n    {\n        $flag = 0;\n        $application = JFactory::getApplication();\n\n        //Getting user input\n        $input = JFactory::getApplication()->input;\n        $email = $input->get('email', '', 'string');\n        $db = JFactory::getDbo();\n        $query = $db->getQuery(true);\n\n        //Retrieving records from DB\n        $query\n            ->select($db->quoteName(array('id', 'name', 'email')))\n            ->from($db->quoteName('newsletter'));\n\n        $db->setQuery($query);\n        $result = $db->loadObjectList();\n\n        //Comparing records with input\n        foreach ($result as $key => $value) {\n            if ($value->email === $email) {\n                $flag = 1;\n                $query->clear();\n\n                //Condition for delete a record\n                $conditions = array(\n                    $db->quotename('id') . ' = ' .  $db->quote($value->id),\n                    $db->quotename('name') . ' = ' .  $db->quote($value->name),\n                    $db->quotename('email') . ' = ' .  $db->quote($value->email)\n                );\n\n                //Deleting record\n                $query->delete($db->quoteName('newsletter'));\n                $query->where($conditions);\n                $db->setQuery($query);\n                $result = $db->execute();\n                $application->enqueueMessage(JText::_('Unsubscribed successfully'), 'success');\n                break;\n            }\n        }\n\n        if ($flag == 0) {\n            $application->enqueueMessage(JText::_(\"Email Address Not Found\"), 'info');\n        }\n        // return $email;\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/helper.php b/helper.php
--- a/helper.php	(revision 8e7f040b6817df452b03b16bfa38a62dda5e2fe1)
+++ b/helper.php	(date 1639537080283)
@@ -1,27 +1,42 @@
 <?php
 class ModHelloWorldHelper
 {
-    //Function for adding new user's email
-    public static function subscribe()
+    protected $application;
+    protected $input;
+    protected $db;
+
+    public function __construct(){
+        $this->application=JFactory::getApplication();
+        $this->input = new JInput;
+        $this->db = JFactory::getDbo();
+    }
+
+    //Function for showing message
+    public function showMessage(string $message, string $type)
+    {
+        return $this->application->enqueueMessage(JText::_($message), $type);
+    }
+
+    //Function for subscribe
+    public function Subscribe()
     {
         $flag = 0;
-        $application = JFactory::getApplication();
-        $name = $_POST["name"];
-        $email = $_POST["email"];
-        $db = JFactory::getDbo();
-        $query = $db->getQuery(true);
+        $post = $this->input->getArray($_POST);
+        $name = $post["name"];
+        $email = $post["email"];
+        $query = $this->db->getQuery(true);
 
         $query
-            ->select($db->quoteName(array('id', 'name', 'email')))
-            ->from($db->quoteName('newsletter'));
+            ->select($this->db->quoteName(array('id', 'name', 'email')))
+            ->from($this->db->quoteName('newsletter'));
 
-        $db->setQuery($query);
-        $result = $db->loadObjectList();
+        $this->db->setQuery($query);
+        $result = $this->db->loadObjectList();
 
         //Checking if user email address is already added
-        foreach ($result as $key => $value) {
+        foreach ($result as $value) {
             if ($value->email === $email) {
-                $application->enqueueMessage(JText::_('Email Already Exists'), 'error');
+                $this->showMessage('Email Already Exists', 'error');
                 $flag = 1;
                 break;
             }
@@ -30,65 +45,65 @@
         //If user email is new then email address will be added
         if ($flag == 0) {
             $columns = array('name', 'email');
-            $values = array($db->quote($name), $db->quote($email));
+            $values = array($this->db->quote($name), $this->db->quote($email));
             $query->clear();
 
+            //Query for insert into DB
             $query
-                ->insert($db->quoteName('newsletter'))
-                ->columns($db->quoteName($columns))
+                ->insert($this->db->quoteName('newsletter'))
+                ->columns($this->db->quoteName($columns))
                 ->values(implode(',', $values));
 
-            $db->setQuery($query);
-            $db->execute();
-            $application->enqueueMessage(JText::_('Subscribed successfully'), 'success');
+            $this->db->setQuery($query);
+            $this->db->execute();
+            $this->showMessage('Subscribed successfully', 'success');
         }
     }
 
-    public static function unSubscribe()
+    //Function for unsubscribe
+    public function Unsubscribe()
     {
         $flag = 0;
-        $application = JFactory::getApplication();
 
         //Getting user input
-        $input = JFactory::getApplication()->input;
+        $input = $this->application->input;
         $email = $input->get('email', '', 'string');
-        $db = JFactory::getDbo();
-        $query = $db->getQuery(true);
 
-        //Retrieving records from DB
+        $query = $this->db->getQuery(true);
+
+        //Retriving records from DB
         $query
-            ->select($db->quoteName(array('id', 'name', 'email')))
-            ->from($db->quoteName('newsletter'));
+            ->select($this->db->quoteName(array('id', 'name', 'email')))
+            ->from($this->db->quoteName('newsletter'));
 
-        $db->setQuery($query);
-        $result = $db->loadObjectList();
+        $this->db->setQuery($query);
+        $result = $this->db->loadObjectList();
 
         //Comparing records with input
-        foreach ($result as $key => $value) {
+        foreach ($result as $value) {
             if ($value->email === $email) {
                 $flag = 1;
                 $query->clear();
 
                 //Condition for delete a record
                 $conditions = array(
-                    $db->quotename('id') . ' = ' .  $db->quote($value->id),
-                    $db->quotename('name') . ' = ' .  $db->quote($value->name),
-                    $db->quotename('email') . ' = ' .  $db->quote($value->email)
+                    $this->db->quotename('id') . ' = ' .  $this->db->quote($value->id),
+                    $this->db->quotename('name') . ' = ' .  $this->db->quote($value->name),
+                    $this->db->quotename('email') . ' = ' .  $this->db->quote($value->email)
                 );
 
                 //Deleting record
-                $query->delete($db->quoteName('newsletter'));
+                $query->delete($this->db->quoteName('newsletter'));
                 $query->where($conditions);
-                $db->setQuery($query);
-                $result = $db->execute();
-                $application->enqueueMessage(JText::_('Unsubscribed successfully'), 'success');
+                $this->db->setQuery($query);
+                $this->db->execute();
+                $this->showMessage('Unsubscribed successfully', 'success');
                 break;
             }
         }
 
         if ($flag == 0) {
-            $application->enqueueMessage(JText::_("Email Address Not Found"), 'info');
+            $this->showMessage("Email Address Not Found", 'error');
         }
-        // return $email;
     }
-}
\ No newline at end of file
+}
Index: tmpl/default.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\n/**\n * @package     Joomla.Site\n * @subpackage  mod_instagram\n *\n * @copyright   (C) 2009 Open Source Matters, Inc. <https://www.joomla.org>\n * @license     GNU General Public License version 2 or later; see LICENSE.txt\n */\n\ndefined('_JEXEC') or die;\n?>\n\n<form action=\"\" method=\"post\">\n    <label for=\"\">Name:</label><br>\n    <input type=\"text\" name=\"name\" style=\"width: 100%;\" placeholder=\"Enter Your Name\" required><br>\n    <label for=\"\">Email:</label><br>\n    <input type=\"email\" name=\"email\" style=\"width: 100%;\" placeholder=\"Enter Your Email\" required><br>\n    <br>\n    <input type=\"submit\" style=\"width: 100%;\" value=\"Subscirbe\">\n</form>\n<hr>\n<form action=\"\" method=\"post\">\n    <label for=\"\">\n        <input name=\"method\" type=\"hidden\" value=\"delete\" />Email:</label><br>\n    <input type=\"email\" name=\"email\" style=\"width: 100%;\" placeholder=\"Enter Your Email to Unsubscribe\"><br>\n    <br>\n    <input type=\"submit\" style=\"width: 100%;\" value=\"Unsubscirbe\">\n</form>\n<?php\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') {\n    if($_POST[\"method\"]===\"delete\"){\n    $data = ModHelloWorldHelper::Unsubscribe();\n    }else{\n        ModHelloWorldHelper::Subscribe();\n    }\n}\n\n\n?>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tmpl/default.php b/tmpl/default.php
--- a/tmpl/default.php	(revision 8e7f040b6817df452b03b16bfa38a62dda5e2fe1)
+++ b/tmpl/default.php	(date 1639538145820)
@@ -28,12 +28,13 @@
     <input type="submit" style="width: 100%;" value="Unsubscirbe">
 </form>
 <?php
-
+$helper= new ModHelloWorldHelper;
 if ($_SERVER['REQUEST_METHOD'] === 'POST') {
-    if($_POST["method"]==="delete"){
-    $data = ModHelloWorldHelper::Unsubscribe();
+    $method="";
+    if($_POST["method"]=="delete"){
+        $helper->Unsubscribe();
     }else{
-        ModHelloWorldHelper::Subscribe();
+        $helper->Subscribe();
     }
 }
 
